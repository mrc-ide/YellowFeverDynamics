% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc2.R
\name{mcmc_prelim_fit2}
\alias{mcmc_prelim_fit2}
\title{mcmc_prelim_fit2}
\usage{
mcmc_prelim_fit2(
  n_iterations = 1,
  n_param_sets = 1,
  n_bounds = 1,
  type = NULL,
  log_params_min = NULL,
  log_params_max = NULL,
  input_data = list(),
  obs_sero_data = list(),
  obs_case_data = list(),
  mode_start = 0,
  prior_settings = list(type = "zero"),
  dt = 1,
  n_reps = 1,
  enviro_data = NULL,
  R0_fixed_values = c(),
  p_severe_inf = 0.12,
  p_death_severe_inf = 0.39,
  add_values = list(vaccine_efficacy = 1, p_rep_severe = 1, p_rep_death = 1, m_FOI_Brazil
    = 1),
  deterministic = TRUE,
  mode_parallel = FALSE,
  cluster = NULL
)
}
\arguments{
\item{n_iterations}{= Number of times to run and adjust maximum/minimum}

\item{n_param_sets}{= Number of parameter sets to run in each iteration}

\item{n_bounds}{= Number of parameter sets (with highest likelihood values) to take at each iteration to create new
maximum/minimum values}

\item{type}{Type of parameter set (FOI only, FOI+R0, FOI and/or R0 coefficients associated with environmental
covariates); choose from "FOI","FOI+R0","FOI enviro","FOI+R0 enviro"}

\item{log_params_min}{Initial lower limits of values of parameters being estimated (natural logarithm of actual limits)}

\item{log_params_max}{Initial upper limits of values of parameters being estimated (natural logarithm of actual limits)}

\item{input_data}{List of population and vaccination data for multiple regions (created using data input creation
code and usually loaded from RDS file)}

\item{obs_sero_data}{Seroprevalence data for comparison, by region, year & age group, in format no. samples/no.
positives}

\item{obs_case_data}{Annual reported case/death data for comparison, by region and year, in format no. cases/no.
deaths}

\item{mode_start}{Flag indicating how to set initial population immunity level in addition to vaccination
If mode_start = 0, only vaccinated individuals
If mode_start = 1, shift some non-vaccinated individuals into recovered to give herd immunity (uniform by age, R0 based only)
If mode_start = 3, shift some non-vaccinated individuals into recovered to give herd immunity (stratified by age)}

\item{prior_settings}{TBA}

\item{dt}{time increment in days (must be 1 or 5)}

\item{n_reps}{Number of repetitions}

\item{enviro_data}{Values of environmental variables (if in use)}

\item{R0_fixed_values}{Values of R0 to use if type set to "FOI" or "FOI enviro"}

\item{p_severe_inf}{TBA}

\item{p_death_severe_inf}{TBA}

\item{add_values}{List of parameters in addition to those governing FOI/R0, either giving a fixed value or giving NA to
 indicate that they are part of the fitted  parameter set
vaccine_efficacy Vaccine efficacy (proportion of reported vaccinations causing immunity) (must be present)
p_rep_severe Probability of observation of severe infection
p_rep_death Probability of observation of death
m_FOI_Brazil Multiplier of spillover FOI for Brazil regions (only relevant if regions in Brazil to be considered)
p_rep_severe_af Probability of observation of severe infection in African regions
p_rep_death_af Probability of observation of death in African regions
p_rep_severe_sa Probability of observation of severe infection in South American regions
p_rep_death_sa Probability of observation of death in South American regions
NOTE: Either p_rep_severe and p_rep_death OR p_rep_severe_af, p_rep_death_af, p_rep_severe_sa and p_rep_death_sa must be used}

\item{deterministic}{TBA}

\item{mode_parallel}{TRUE/FALSE - indicate whether to use parallel processing on supplied cluster for speed}

\item{cluster}{Cluster of threads to use if multithreading to be used; set to NULL otherwise
'}
}
\description{
Test multiple sets of parameters randomly drawn from range between maximum and minimum
values in order to find approximate values giving maximum posterior likelihood
}
\details{
This function is used to estimate the model parameter values giving maximum posterior likelihood; it is
primarily intended to be used to generate initial parameter values for Markov Chain Monte Carlo fitting (using
the mcmc() function).
}
