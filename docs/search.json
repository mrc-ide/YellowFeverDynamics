[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keith Fraser. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fraser K (2022). YellowFeverDynamics: Yellow Fever Outbreak Dynamic Model. R package version 0.1.0.","code":"@Manual{,   title = {YellowFeverDynamics: Yellow Fever Outbreak Dynamic Model},   author = {Keith Fraser},   year = {2022},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"yellowfeverdynamics","dir":"","previous_headings":"","what":"Yellow Fever Outbreak Dynamic Model","title":"Yellow Fever Outbreak Dynamic Model","text":"package running dynamic, stochastic SEIRV model yellow fever, creating input data processing output data. package can also used fit values epidemiological parameters model different types data yellow fever burden one regions.","code":""},{"path":"/reference/BasicModelOD.html","id":null,"dir":"Reference","previous_headings":"","what":"The Basic Model\r\nThe odin.dust SEIRV model, basic version (documentation TBA) — BasicModelOD","title":"The Basic Model\r\nThe odin.dust SEIRV model, basic version (documentation TBA) — BasicModelOD","text":"Basic Model odin.dust SEIRV model, basic version (documentation TBA)","code":""},{"path":"/reference/Basic_Model_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic_Model_Run — Basic_Model_Run","title":"Basic_Model_Run — Basic_Model_Run","text":"Run basic version SEIRV model","code":""},{"path":"/reference/Basic_Model_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic_Model_Run — Basic_Model_Run","text":"","code":"Basic_Model_Run(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_particles = 1,   n_threads = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1 )"},{"path":"/reference/Basic_Model_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic_Model_Run — Basic_Model_Run","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) n_particles number particles use n_threads number threads use year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/Basic_Model_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic_Model_Run — Basic_Model_Run","text":"Accepts epidemiological + population parameters model settings; runs basic version SEIRV model one region specified time period number particles/threads outputs time-dependent SEIRV values. (Differs Full_Model_Run recording new infection numbers total force infection.)","code":""},{"path":"/reference/calc_like0.html","id":null,"dir":"Reference","previous_headings":"","what":"calc_like0 — calc_like0","title":"calc_like0 — calc_like0","text":"Calculate \"best case\" likelihood","code":""},{"path":"/reference/calc_like0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calc_like0 — calc_like0","text":"","code":"calc_like0(   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL )"},{"path":"/reference/calc_like0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calc_like0 — calc_like0","text":"obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s)","code":""},{"path":"/reference/calc_like0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calc_like0 — calc_like0","text":"Calculate likelihood value obtained (prior) modelled data values              equal observed values (use comparison MCMC likelihood values)","code":""},{"path":"/reference/cases_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"cases_compare — cases_compare","title":"cases_compare — cases_compare","text":"Compare modelled observed severe cases using negative binomial","code":""},{"path":"/reference/cases_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cases_compare — cases_compare","text":"","code":"cases_compare(model_data = list(), obs_data = list())"},{"path":"/reference/cases_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cases_compare — cases_compare","text":"model_data Modelled data data frame format (list years number reported severe cases ) obs_data Data frame containing annual observed case data '","code":""},{"path":"/reference/cases_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cases_compare — cases_compare","text":"Compares modelled data severe cases per year compared observed data, calculating logarithmic likelihood observing latter given former, using negative binomial formula.","code":""},{"path":"/reference/case_data_generate.html","id":null,"dir":"Reference","previous_headings":"","what":"case_data_generate — case_data_generate","title":"case_data_generate — case_data_generate","text":"Take single set population data model parameters, output infection data ","code":""},{"path":"/reference/case_data_generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_data_generate — case_data_generate","text":"","code":"case_data_generate(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_reps = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = vaccine_efficacy,   start_SEIRV = list(),   dt = 1 )"},{"path":"/reference/case_data_generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_data_generate — case_data_generate","text":"FOI_spillover = Force infection due spillover sylvatic reservoir R0 = Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) n_reps Number runs year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/case_data_generate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"case_data_generate — case_data_generate","text":"Accepts epidemiological + population parameters model settings; runs full version SEIRV model one region specified time period number particles/threads outputs infection numbers time increment ; optimized running large number repetitions","code":""},{"path":"/reference/case_data_generate_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"case_data_generate_deterministic — case_data_generate_deterministic","title":"case_data_generate_deterministic — case_data_generate_deterministic","text":"Take single set population data model parameters, output infection data (deterministic)","code":""},{"path":"/reference/case_data_generate_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_data_generate_deterministic — case_data_generate_deterministic","text":"","code":"case_data_generate_deterministic(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_reps = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = vaccine_efficacy,   start_SEIRV = list(),   dt = 1 )"},{"path":"/reference/case_data_generate_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_data_generate_deterministic — case_data_generate_deterministic","text":"FOI_spillover = Force infection due spillover sylvatic reservoir R0 = Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) n_reps Number runs year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/case_data_generate_deterministic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"case_data_generate_deterministic — case_data_generate_deterministic","text":"Accepts epidemiological + population parameters model settings; runs full version SEIRV model one region specified time period number particles/threads outputs infection numbers time increment ; optimized running large number repetitions","code":""},{"path":"/reference/case_match_graphs.html","id":null,"dir":"Reference","previous_headings":"","what":"case_match_graphs — case_match_graphs","title":"case_match_graphs — case_match_graphs","text":"Function create series graphs comparing modelled observed case data results   generated data_match_multi() function","code":""},{"path":"/reference/case_match_graphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_match_graphs — case_match_graphs","text":"","code":"case_match_graphs(   model_data = list(),   obs_case_data = list(),   input_data = list(),   plot_type = \"mean\",   text_size = 1,   hide_observed = FALSE )"},{"path":"/reference/case_match_graphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_match_graphs — case_match_graphs","text":"model_data Simulated datasets produced data_match_multi() function obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths input_data List population vaccination data multiple regions, tables cross-reference observed data, added using input_data_process plot_type Form plot model data: \"\": bands showing 95% 50% values; \"mean\": bands showing 95% 50% confidence intervals mean values text_size Size text display graphs hide_observed TRUE, indicates supplied observed data \"dummy\" data supplied indicate years age ranges, plotted graph(s)","code":""},{"path":"/reference/case_match_graphs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"case_match_graphs — case_match_graphs","text":"Takes simulated datasets produced data_match_multi() function along observed annual case   dataset used generate simulated datasets, produces graph(s) (one graph per region group regions   annual case data supplied) showing observed simulated data set(s) axes,   observed data displayed points lines simulated data coloured bands.","code":""},{"path":"/reference/create_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"create_input_data — create_input_data","title":"create_input_data — create_input_data","text":"Creates input data set correct format use functions","code":""},{"path":"/reference/create_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_input_data — create_input_data","text":"","code":"create_input_data(   vacc_data = list(),   pop_data = list(),   regions = c(),   years = c() )"},{"path":"/reference/create_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_input_data — create_input_data","text":"vacc_data Data frame containing vaccination coverage data region column 1, year column 2 coverage values age remaining columns pop_data Data frame containing population data region column 1, year column 2 population values age remaining columns regions Vector regions extract data vacc_data pop_data (alphabetical order) years Vector years extract data vacc_data pop_data '","code":""},{"path":"/reference/create_input_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_input_data — create_input_data","text":"Takes vaccination population data data frames (columns age columns showing region   year row), extracts number age groups (verifying data frame),   extracts data specified regions years, creates list format used functions (vectors   region names, years age groups, 3-dimensional arrays vaccination population data).","code":""},{"path":"/reference/create_map.html","id":null,"dir":"Reference","previous_headings":"","what":"create_map — create_map","title":"create_map — create_map","text":"Create map one regions colours denoting parameter values","code":""},{"path":"/reference/create_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_map — create_map","text":"","code":"create_map(   shape_data = list(),   param_values = c(),   scale = c(),   colour_scale = c(),   pixels_max = 720,   text_size = 1,   map_title = \"\",   legend_title = \"\",   legend_position = \"topleft\",   legend_format = \"f\",   legend_dp = 1,   output_file = NULL )"},{"path":"/reference/create_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_map — create_map","text":"shape_data Region shape data generated using map_shapes_load() param_values Vector parameter values regions shape_data scale Vector scale intervals use param_values colour_scale Vector colours size greater equal scale - used convert scale colours pixels_max Number pixels use largest dimension map text_size Size text appear legend titles map_title Title show map legend_title Title show legend legend_position Position place map legend (select \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\", \"topright\", \"right\" \"center\") legend_format Number format use scale values legend - set \"f\" (basic number), \"e\" (scientific notation) \"pc\" (percentage) legend_dp Number decimal places use scale values legend (e.g. legend_format \"f\" legend_dp 1, numbers appear e.g. 10.0) output_file Name file output map; set NULL, map displayed without saved file '","code":""},{"path":"/reference/create_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_map — create_map","text":"Takes region shape data generated using map_shapes_load() parameter values region, plots map   regions fills regions colour based parameter values","code":""},{"path":"/reference/create_param_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"create_param_labels — create_param_labels","title":"create_param_labels — create_param_labels","text":"Apply names parameters set used data matching parameter fitting","code":""},{"path":"/reference/create_param_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_param_labels — create_param_labels","text":"","code":"create_param_labels(   type = \"FOI\",   input_data = list(),   enviro_data = NULL,   extra_params = c(\"vacc_eff\") )"},{"path":"/reference/create_param_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_param_labels — create_param_labels","text":"type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) enviro_data Environmental data frame, containing relevant environmental variables extra_params Vector strings listing parameters besides ones determining FOI/R0 (may include vaccine efficacy /infection/death reporting probabilities)","code":""},{"path":"/reference/create_param_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_param_labels — create_param_labels","text":"Takes input list environmental data along names additional parameters (vaccine efficacy reporting probabilities) generates list names parameter set use input fitting functions","code":""},{"path":"/reference/data_match_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"data_match_multi — data_match_multi","title":"data_match_multi — data_match_multi","text":"Function runs model create simulated data corresponding supplied observed data   multiple parameter sets","code":""},{"path":"/reference/data_match_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data_match_multi — data_match_multi","text":"","code":"data_match_multi(   param_sets = list(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   const_list = list() )"},{"path":"/reference/data_match_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data_match_multi — data_match_multi","text":"param_sets Data frame log values proposed parameters, one set per row input_data List population vaccination data multiple regions, tables cross-reference observed data, added using input_data_process2 obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) const_list = List constant parameters/flags/etc. (type,n_reps,mode_start,dt,enviro_data,R0_fixed_values, vaccine_efficacy,p_rep_severe,p_rep_death)","code":""},{"path":"/reference/data_match_multi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"data_match_multi — data_match_multi","text":"function runs data_match_single() function multiple parameter sets. takes observed data   produces corresponding simulated datasets comparison using multiple sets supplied model parameters (  param_sets input variable), population vaccination settings (input_data input variable)   settings including parameter type, time increment environmental covariate values (const_list input   variable). simulated dataset able compared directly observed dataset - individual data   values produced years regions (combinations regions), seroprevalence data   produced age groups, etc.","code":""},{"path":"/reference/data_match_single.html","id":null,"dir":"Reference","previous_headings":"","what":"data_match_single — data_match_single","title":"data_match_single — data_match_single","text":"Function runs model create simulated data corresponding supplied observed data   single set parameters one repetitions","code":""},{"path":"/reference/data_match_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data_match_single — data_match_single","text":"","code":"data_match_single(   params = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   const_list = list() )"},{"path":"/reference/data_match_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data_match_single — data_match_single","text":"params Values input parameters order FOI/FOI coefficients, R0/R0 coefficients, input_data List population vaccination data multiple regions, tables cross-reference observed data, added using input_data_process obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) const_list = List constant parameters/flags/etc. (type,n_reps,mode_start,dt,enviro_data,R0_fixed_values, vaccine_efficacy,p_rep_severe,p_rep_death,m_FOI_Brazil)","code":""},{"path":"/reference/data_match_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"data_match_single — data_match_single","text":"function takes observed data produces corresponding simulated dataset comparison using   supplied model parameters (params input variable), population vaccination settings (  input_data input variable) settings including parameter type, time increment environmental covariate   values (const_list input variable). simulated dataset able compared directly   observed dataset - individual data values produced years regions (combinations   regions), seroprevalence data produced age groups, etc.","code":""},{"path":"/reference/deaths_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"deaths_compare — deaths_compare","title":"deaths_compare — deaths_compare","text":"Compare modelled observed deaths using negative binomial","code":""},{"path":"/reference/deaths_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deaths_compare — deaths_compare","text":"","code":"deaths_compare(model_data = list(), obs_data = list())"},{"path":"/reference/deaths_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deaths_compare — deaths_compare","text":"model_data Modelled data data frame format (list years number reported deaths ) obs_data Data frame containing observed death data '","code":""},{"path":"/reference/deaths_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"deaths_compare — deaths_compare","text":"Compares modelled data fatal cases per year compared observed data, calculating logarithmic likelihood observing latter given former, using negative binomial formula.","code":""},{"path":"/reference/display_multichain_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"display_multichain_progress — display_multichain_progress","title":"display_multichain_progress — display_multichain_progress","text":"Plot graph Markov chain progress","code":""},{"path":"/reference/display_multichain_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"display_multichain_progress — display_multichain_progress","text":"","code":"display_multichain_progress(   datasets = list(),   datasets_selected = c(1),   burnin_values = NULL,   end_values = NULL,   flag_grb = FALSE )"},{"path":"/reference/display_multichain_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"display_multichain_progress — display_multichain_progress","text":"datasets List containing one datasets, generated get_mcmc_datasets_multichain() datasets_selected Vector dataset numbers selected list burnin_values Vector burnin values use selected datasets (set 1 default) end_values Vector end values use selected datasets (set last value default) flag_grb Flag indicating whether plot Gelman-Rubin-Brooks convergence diagnostic (coda::gelman.plot())","code":""},{"path":"/reference/display_multichain_progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"display_multichain_progress — display_multichain_progress","text":"function plots graph based one datasets generated get_mcm_datasets_multichain(),   showing likelihood function number iterations","code":""},{"path":"/reference/FullModelOD.html","id":null,"dir":"Reference","previous_headings":"","what":"The Full Model\r\nThe odin.dust SEIRV model, full version (documentation TBA) — FullModelOD","title":"The Full Model\r\nThe odin.dust SEIRV model, full version (documentation TBA) — FullModelOD","text":"Full Model odin.dust SEIRV model, full version (documentation TBA)","code":""},{"path":"/reference/Full_Model_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Full_Model_Run — Full_Model_Run","title":"Full_Model_Run — Full_Model_Run","text":"Run full version SEIRV model","code":""},{"path":"/reference/Full_Model_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full_Model_Run — Full_Model_Run","text":"","code":"Full_Model_Run(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_particles = 1,   n_threads = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1 )"},{"path":"/reference/Full_Model_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full_Model_Run — Full_Model_Run","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRVC input list previous run(s) n_particles number particles use n_threads number threads use year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/Full_Model_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full_Model_Run — Full_Model_Run","text":"Accepts epidemiological + population parameters model settings; runs full version SEIRV model one region specified time period number particles/threads outputs time-dependent SEIRV values, infection numbers total force infection values.","code":""},{"path":"/reference/Full_Model_Run_Deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Full_Model_Run_Deterministic — Full_Model_Run_Deterministic","title":"Full_Model_Run_Deterministic — Full_Model_Run_Deterministic","text":"Run deterministic version SEIRV model","code":""},{"path":"/reference/Full_Model_Run_Deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full_Model_Run_Deterministic — Full_Model_Run_Deterministic","text":"","code":"Full_Model_Run_Deterministic(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_particles = 1,   n_threads = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1 )"},{"path":"/reference/Full_Model_Run_Deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full_Model_Run_Deterministic — Full_Model_Run_Deterministic","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRVC input list previous run(s) n_particles number particles use n_threads number threads use year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/Full_Model_Run_Deterministic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full_Model_Run_Deterministic — Full_Model_Run_Deterministic","text":"Accepts epidemiological/population parameters model settings; runs deterministic version SEIRV model one region specified time period number particles/threads outputs time-dependent SEIRV values, infection numbers total force infection values.","code":""},{"path":"/reference/Generate_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate_Dataset — Generate_Dataset","title":"Generate_Dataset — Generate_Dataset","text":"Generate serological, annual case/death /annual outbreak risk data","code":""},{"path":"/reference/Generate_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate_Dataset — Generate_Dataset","text":"","code":"Generate_Dataset(   input_data = list(),   FOI_values = c(),   R0_values = c(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   vaccine_efficacy = 1,   p_rep_severe = 1,   p_rep_death = 1,   mode_start = 1,   n_reps = 1,   dt = 1 )"},{"path":"/reference/Generate_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate_Dataset — Generate_Dataset","text":"input_data List population vaccination data multiple regions FOI_values Values region force infection due spillover sylvatic reservoir R0_values Values region basic reproduction number human-human transmission obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) vaccine_efficacy Fractional vaccine efficacy p_rep_severe Probability reporting severe non-fatal infection p_rep_death Probability reporting fatal infection mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) n_reps Number repeats average results dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/Generate_Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate_Dataset — Generate_Dataset","text":"function used generate serological, annual case/death /annual outbreak risk data based   observed dummy data sets; normally used single_like_calc() data_match_single() functions","code":""},{"path":"/reference/get_mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_data — get_mcmc_data","title":"get_mcmc_data — get_mcmc_data","text":"Read MCMC results CSV files folder; plot likelihood graph /output data set","code":""},{"path":"/reference/get_mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_data — get_mcmc_data","text":"","code":"get_mcmc_data(input_folder = \"\", plot_graph = TRUE)"},{"path":"/reference/get_mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_data — get_mcmc_data","text":"input_folder Folder containing CSV files output mcmc() plot_graph TRUE/FALSE flag indicating whether plot graph likelihood values '","code":""},{"path":"/reference/get_mcmc_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_data — get_mcmc_data","text":"function intended read output mcmc() function saved CSV files course run. reads CSV files specified folder (ignoring subfolders) alphabetical order combines single data frame.  outputs data frame optionally plots posterior likelihood graph.","code":""},{"path":"/reference/get_mcmc_datasets_multichain.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_datasets_multichain — get_mcmc_datasets_multichain","title":"get_mcmc_datasets_multichain — get_mcmc_datasets_multichain","text":"Get MCMC output data multiple chains","code":""},{"path":"/reference/get_mcmc_datasets_multichain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_datasets_multichain — get_mcmc_datasets_multichain","text":"","code":"get_mcmc_datasets_multichain(input_folders = c())"},{"path":"/reference/get_mcmc_datasets_multichain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_datasets_multichain — get_mcmc_datasets_multichain","text":"input_folders Vector folders get chain data","code":""},{"path":"/reference/get_mcmc_datasets_multichain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_datasets_multichain — get_mcmc_datasets_multichain","text":"function extracts data produced mcmc() subordinate functions organizes   list datasets processing.","code":""},{"path":"/reference/get_mcmc_enviro_coeff_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_enviro_coeff_data — get_mcmc_enviro_coeff_data","title":"get_mcmc_enviro_coeff_data — get_mcmc_enviro_coeff_data","text":"Extract values environmental coefficients MCMC output data","code":""},{"path":"/reference/get_mcmc_enviro_coeff_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_enviro_coeff_data — get_mcmc_enviro_coeff_data","text":"","code":"get_mcmc_enviro_coeff_data(   input_frame = list(),   type = \"FOI+R0\",   enviro_data = list() )"},{"path":"/reference/get_mcmc_enviro_coeff_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_enviro_coeff_data — get_mcmc_enviro_coeff_data","text":"input_frame Data frame MCMC output data type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI enviro\",\"FOI+R0 enviro\" enviro_data Data frame environmental covariate values used calculate FOI R0 MCMC run, region   (NOTE: data frame include relevant environmental covariates; used MCMC fit    removed) '","code":""},{"path":"/reference/get_mcmc_enviro_coeff_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_enviro_coeff_data — get_mcmc_enviro_coeff_data","text":"function takes data frame produced functions get_mcmc_data() /truncate_mcmc_data() calculates spillover force infection (FOI) reproduction number (R0) values row frame (representing points chain) based type fit carried .","code":""},{"path":"/reference/get_mcmc_enviro_coeff_multichain.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_enviro_coeff_multichain — get_mcmc_enviro_coeff_multichain","title":"get_mcmc_enviro_coeff_multichain — get_mcmc_enviro_coeff_multichain","text":"Get environmental coefficient data MCMC results","code":""},{"path":"/reference/get_mcmc_enviro_coeff_multichain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_enviro_coeff_multichain — get_mcmc_enviro_coeff_multichain","text":"","code":"get_mcmc_enviro_coeff_multichain(   datasets = c(),   datasets_selected = c(1),   burnin_values = NULL,   end_values = NULL,   type = \"FOI+R0\",   enviro_data = NULL )"},{"path":"/reference/get_mcmc_enviro_coeff_multichain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_enviro_coeff_multichain — get_mcmc_enviro_coeff_multichain","text":"datasets List containing one datasets, generated get_mcmc_datasets_multichain() datasets_selected Vector dataset numbers selected list burnin_values Vector burn-iteration values (1 per dataset) data discarded end_values Vector end iteration values (1 per dataset) data discarded type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" enviro_data Data frame containing values environmental covariates; set NULL use","code":""},{"path":"/reference/get_mcmc_enviro_coeff_multichain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_enviro_coeff_multichain — get_mcmc_enviro_coeff_multichain","text":"function extracts values coefficients environmental covariates datasets   generated get_mcmc_datasets_multichain(), returning list datasets","code":""},{"path":"/reference/get_mcmc_FOI_R0_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_FOI_R0_data — get_mcmc_FOI_R0_data","title":"get_mcmc_FOI_R0_data — get_mcmc_FOI_R0_data","text":"Extract spillover force infection (FOI) reproduction number (R0) values MCMC output data","code":""},{"path":"/reference/get_mcmc_FOI_R0_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_FOI_R0_data — get_mcmc_FOI_R0_data","text":"","code":"get_mcmc_FOI_R0_data(   input_frame = list(),   type = \"FOI+R0\",   enviro_data = list() )"},{"path":"/reference/get_mcmc_FOI_R0_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_FOI_R0_data — get_mcmc_FOI_R0_data","text":"input_frame Data frame MCMC output data type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" enviro_data Data frame environmental covariate values used calculate FOI R0 MCMC run, region   (NOTE: data frame include relevant environmental covariates; used MCMC fit    removed) '","code":""},{"path":"/reference/get_mcmc_FOI_R0_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_FOI_R0_data — get_mcmc_FOI_R0_data","text":"function takes data frame produced functions get_mcmc_data() /truncate_mcmc_data() calculates spillover force infection (FOI) reproduction number (R0) values row frame (representing points chain) based type fit carried .","code":""},{"path":"/reference/get_mcmc_FOI_R0_multichain.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_FOI_R0_multichain — get_mcmc_FOI_R0_multichain","title":"get_mcmc_FOI_R0_multichain — get_mcmc_FOI_R0_multichain","text":"Get FOI R0 data MCMC results","code":""},{"path":"/reference/get_mcmc_FOI_R0_multichain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_FOI_R0_multichain — get_mcmc_FOI_R0_multichain","text":"","code":"get_mcmc_FOI_R0_multichain(   datasets = c(),   datasets_selected = c(1),   burnin_values = NULL,   end_values = NULL,   type = \"FOI+R0\",   enviro_data = NULL )"},{"path":"/reference/get_mcmc_FOI_R0_multichain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_FOI_R0_multichain — get_mcmc_FOI_R0_multichain","text":"datasets List containing one datasets, generated get_mcmc_datasets_multichain() datasets_selected Vector dataset numbers selected list burnin_values Vector burn-iteration values (1 per dataset) data discarded end_values Vector end iteration values (1 per dataset) data discarded type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" enviro_data Data frame containing values environmental covariates; set NULL use","code":""},{"path":"/reference/get_mcmc_FOI_R0_multichain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_FOI_R0_multichain — get_mcmc_FOI_R0_multichain","text":"function extracts spillover FOI R0 values datasets generated   get_mcmc_datasets_multichain(), returning list datasets","code":""},{"path":"/reference/get_mcmc_params.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_data — get_mcmc_params","title":"get_mcmc_data — get_mcmc_params","text":"Identify columns MCMC output data containing fitted parameter values get parameter names","code":""},{"path":"/reference/get_mcmc_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_data — get_mcmc_params","text":"","code":"get_mcmc_params(chain = list())"},{"path":"/reference/get_mcmc_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_data — get_mcmc_params","text":"chain Data frame containing MCMC output '","code":""},{"path":"/reference/get_mcmc_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_data — get_mcmc_params","text":"function takes dataset output mcmc() extracts names fitted parameters   vector","code":""},{"path":"/reference/get_mcmc_probs_multichain.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mcmc_probs_multichain — get_mcmc_probs_multichain","title":"get_mcmc_probs_multichain — get_mcmc_probs_multichain","text":"Get case reporting vaccine efficacy data MCMC results","code":""},{"path":"/reference/get_mcmc_probs_multichain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mcmc_probs_multichain — get_mcmc_probs_multichain","text":"","code":"get_mcmc_probs_multichain(   datasets = c(),   datasets_selected = c(1),   burnin_values = NULL,   end_values = NULL,   prob_names = c(\"vaccine_efficacy\") )"},{"path":"/reference/get_mcmc_probs_multichain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mcmc_probs_multichain — get_mcmc_probs_multichain","text":"datasets List containing one datasets, generated get_mcmc_datasets_multichain() datasets_selected Vector dataset numbers selected list burnin_values Vector burn-iteration values (1 per dataset) data discarded end_values Vector end iteration values (1 per dataset) data discarded prob_names Vector names probabilities extracted","code":""},{"path":"/reference/get_mcmc_probs_multichain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_mcmc_probs_multichain — get_mcmc_probs_multichain","text":"function extracts values (included calculations) probabilities severe fatal   cases reported vaccine efficacy datasets generated get_mcmc_datasets_multichain(),   returning list datasets","code":""},{"path":"/reference/get_outbreak_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_outbreak_data — get_outbreak_data","title":"get_outbreak_data — get_outbreak_data","text":"Generate outbreak data model output","code":""},{"path":"/reference/get_outbreak_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_outbreak_data — get_outbreak_data","text":"","code":"get_outbreak_data(   case_data = c(),   year_data = c(),   p_rep_severe = 1,   p_rep_death = 1 )"},{"path":"/reference/get_outbreak_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_outbreak_data — get_outbreak_data","text":"case_data Vector cases time point summed age year_data Vector year values corresponding case data p_rep_severe probability severe infection reported p_rep_death probability death reported '","code":""},{"path":"/reference/get_outbreak_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_outbreak_data — get_outbreak_data","text":"Takes case (infection) data output Full_Model_OD() case_data_generate(), uses severe fatal infection rates reporting probabilities calculate number reported cases, outputs list reported outbreaks. outbreak assumed reported one cases reported, continues new cases reported 10 days.","code":""},{"path":"/reference/Infection_Split_Model_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Infection_Split_Model_Run — Infection_Split_Model_Run","title":"Infection_Split_Model_Run — Infection_Split_Model_Run","text":"Run full version SEIRV model daily infection output split sylvatic urban","code":""},{"path":"/reference/Infection_Split_Model_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infection_Split_Model_Run — Infection_Split_Model_Run","text":"","code":"Infection_Split_Model_Run(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_particles = 1,   n_threads = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1 )"},{"path":"/reference/Infection_Split_Model_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infection_Split_Model_Run — Infection_Split_Model_Run","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRVC input list previous run(s) n_particles number particles use n_threads number threads use year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/Infection_Split_Model_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infection_Split_Model_Run — Infection_Split_Model_Run","text":"Accepts epidemiological + population parameters model settings; runs full version SEIRV model one region specified time period number particles/threads outputs time-dependent SEIRV values, infection numbers total force infection values. Daily infection output split sylvatic urban.","code":""},{"path":"/reference/input_data_check.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_check — input_data_check","title":"input_data_check — input_data_check","text":"Check input data correctly formatted","code":""},{"path":"/reference/input_data_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_check — input_data_check","text":"","code":"input_data_check(input_data = list())"},{"path":"/reference/input_data_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_check — input_data_check","text":"input_data List population vaccination data multiple regions","code":""},{"path":"/reference/input_data_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_check — input_data_check","text":"function takes list input data use functions checks correctly   formatted, including containing necessary elements years ages sequence","code":""},{"path":"/reference/input_data_process.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_process — input_data_process","title":"input_data_process — input_data_process","text":"Cross-reference input data serological, annual case/death /outbreak data comparison","code":""},{"path":"/reference/input_data_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_process — input_data_process","text":"","code":"input_data_process(   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL )"},{"path":"/reference/input_data_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_process — input_data_process","text":"input_data List population vaccination data multiple regions (created using create_input_data() function usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s)","code":""},{"path":"/reference/input_data_process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_process — input_data_process","text":"function, used prepare input data functions used calculate likelihood observed data,   amends list population vaccination data used input functions,   cross-referencing seroprevalence, case /outbreak data adding connection information.","code":""},{"path":"/reference/input_data_process2.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_process2 — input_data_process2","title":"input_data_process2 — input_data_process2","text":"TBA","code":""},{"path":"/reference/input_data_process2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_process2 — input_data_process2","text":"","code":"input_data_process2(   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL )"},{"path":"/reference/input_data_process2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_process2 — input_data_process2","text":"input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s)","code":""},{"path":"/reference/input_data_process2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_process2 — input_data_process2","text":"TBA","code":""},{"path":"/reference/input_data_truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_truncate — input_data_truncate","title":"input_data_truncate — input_data_truncate","text":"Truncate input data list shorter set regions","code":""},{"path":"/reference/input_data_truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_truncate — input_data_truncate","text":"","code":"input_data_truncate(input_data = list(), regions_new = c())"},{"path":"/reference/input_data_truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_truncate — input_data_truncate","text":"input_data List population vaccination data multiple regions (created using create_input_data() function usually loaded RDS file) regions_new Vector regions (subset input_data$region_labels) create new, shorter dataset","code":""},{"path":"/reference/input_data_truncate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_truncate — input_data_truncate","text":"TBA","code":""},{"path":"/reference/map_shapes_load.html","id":null,"dir":"Reference","previous_headings":"","what":"map_shapes_load — map_shapes_load","title":"map_shapes_load — map_shapes_load","text":"Create set shape data make one maps","code":""},{"path":"/reference/map_shapes_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_shapes_load — map_shapes_load","text":"","code":"map_shapes_load(regions = c(), shapefiles = c(), region_label_type = \"\")"},{"path":"/reference/map_shapes_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_shapes_load — map_shapes_load","text":"regions Vector names regions extract data shapefiles Vector names shapefiles extract data region_label_type Type region ID used vector regions, corresponding data type appearing   shapefiles (e.g. \"GID_1\" first subnational region IDs form three-letter country code plus   number, e.g. \"AGO.1_1\", \"AGO.2_1\", etc.) '","code":""},{"path":"/reference/map_shapes_load.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"map_shapes_load — map_shapes_load","text":"Takes one shapefiles (.shp) extracts data selected regions specified type","code":""},{"path":"/reference/MCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC — MCMC","title":"MCMC — MCMC","text":"Combined MCMC Multi-Region - series MCMC steps one regions","code":""},{"path":"/reference/MCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC — MCMC","text":"","code":"MCMC(   log_params_ini = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   filename_prefix = \"Chain\",   Niter = 1,   type = NULL,   log_params_min = c(),   log_params_max = c(),   n_reps = 1,   mode_start = 0,   prior_type = \"zero\",   dt = 1,   enviro_data = NULL,   R0_fixed_values = NULL,   vaccine_efficacy = NULL,   p_rep_severe = NULL,   p_rep_death = NULL,   m_FOI_Brazil = 1 )"},{"path":"/reference/MCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC — MCMC","text":"log_params_ini Initial values parameters varied always log() values actual parameters, ordered follows: 1) Parameters controlling value spillover force infection FOI, either ) number FOI values equal total number regions considered b) number environmental coefficients used calculate FOI values environmental covariates equal number environmental covariates listed enviro_data frame. Values alphabetical order region case () order columns environmental data frame case (b). 2) basic reproduction number human-human transmission R0 varied (.e. type set \"FOI+R0\" \"FOI+R0 enviro\"), parameters controlling value R0, either ) number R0 values equal total number regions considered b) number environmental coefficients used calculate R0 values environmental covariates equal number environmental covariates listed enviro_data frame. Values alphabetical order region case () order columns environmental data frame case (b). 3) Values additional parameters (vaccine efficacy vaccine_efficacy, severe case reporting probability p_rep_severe fatal case reporting probability p_rep_death) varied, order vaccine_efficacy->p_rep_severe->p_rep_death. parameters varied, values separately supplied function (see ) set NULL, default. input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) filename_prefix Prefix names output files Niter Total number steps run type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" log_params_min Lower limits varied parameter values specified log_params_max Upper limits varied parameter values specified n_reps Number times repeat calculations get average likelihood step mode_start Flag indicating set initial population immunity level addition vaccination mode_start = 0, vaccinated individuals mode_start = 1, shift non-vaccinated individuals recovered give herd immunity prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values dt time increment days (must 1 5) enviro_data Data frame containing values environmental covariates; set NULL use R0_fixed_values Values R0 use FOI subject fitting (.e. type set \"FOI\" \"FOI enviro\"); set NULL use vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) m_FOI_Brazil Multiplier spillover FOI Brazil regions (set NULL varied parameter) '","code":""},{"path":"/reference/MCMC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC — MCMC","text":"master function running Markov chain optimize parameters yellow fever model based calculated likelihood observing supplied data given particular set parameters.","code":""},{"path":"/reference/MCMC2.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC2 — MCMC2","title":"MCMC2 — MCMC2","text":"Combined MCMC Multi-Region - series MCMC steps one regions","code":""},{"path":"/reference/MCMC2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC2 — MCMC2","text":"","code":"MCMC2(   pars_ini = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   Niter = 1,   type = NULL,   pars_min = NULL,   pars_max = NULL,   n_reps = 1,   mode_start = 0,   prior_type = \"zero\",   dt = 1,   enviro_data = NULL,   R0_fixed_values = NULL,   vaccine_efficacy = NULL,   p_rep_severe = NULL,   p_rep_death = NULL,   filename_prefix = \"Chain\" )"},{"path":"/reference/MCMC2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC2 — MCMC2","text":"pars_ini Initial values parameters fitted. always log() values actual epidemiological parameters, ordered follows: 1) Parameters controlling value spillover force infection FOI, either ) number FOI values equal total number regions considered b) number environmental coefficients used calculate FOI values environmental covariates equal number environmental covariates listed enviro_data frame. Values alphabetical order region case () order columns environmental data frame case (b). 2) basic reproduction number human-human transmission R0 fitted (.e. type set \"FOI+R0\" \"FOI+R0 enviro\"), parameters controlling value R0, either ) number R0 values equal total number regions considered b) number environmental coefficients used calculate R0 values environmental covariates equal number environmental covariates listed enviro_data frame. Values alphabetical order region case () order columns environmental data frame case (b). 3) Values additional parameters (vaccine efficacy vaccine_efficacy, severe case reporting probability p_rep_severe fatal case reporting probability p_rep_death) fitted, order vaccine_efficacy->p_rep_severe->p_rep_death. parameters fitted, values separately supplied function (see ) set NULL, default. input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) Niter Total number steps run type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" pars_min Lower limits parameter values specified pars_max Upper limits parameter values specified n_reps Number times repeat calculations get average likelihood step mode_start Flag indicating set initial population immunity level addition vaccination mode_start = 0, vaccinated individuals mode_start = 1, shift non-vaccinated individuals recovered give herd immunity prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values dt time increment days (must 1 5) enviro_data Data frame containing values environmental covariates; set NULL use R0_fixed_values Values R0 use FOI subject fitting (.e. type set \"FOI\" \"FOI enviro\"); set NULL use vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) filename_prefix Prefix names output files '","code":""},{"path":"/reference/MCMC2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC2 — MCMC2","text":"master function running Markov chain optimize parameters yellow fever model based calculated likelihood observing supplied data given particular set parameters. [TBC]","code":""},{"path":"/reference/mcmc_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_checks — mcmc_checks","title":"mcmc_checks — mcmc_checks","text":"Perform checks MCMC inputs","code":""},{"path":"/reference/mcmc_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_checks — mcmc_checks","text":"","code":"mcmc_checks(   log_params_ini = c(),   n_regions = 1,   type = NULL,   log_params_min = c(),   log_params_max = c(),   prior_type = NULL,   enviro_data = NULL,   R0_fixed_values = NULL,   vaccine_efficacy = NULL,   p_rep_severe = NULL,   p_rep_death = NULL,   m_FOI_Brazil = 1 )"},{"path":"/reference/mcmc_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_checks — mcmc_checks","text":"log_params_ini Initial values varied parameters (natural logarithm actual parameters) n_regions Number regions type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" log_params_min Lower limits varied parameter values specified log_params_max Upper limits varied parameter values specified prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values enviro_data Values environmental covariates (use) R0_fixed_values Values R0 use varied (set NULL R0 varied) vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) m_FOI_Brazil FOI multiplier Brazil regions","code":""},{"path":"/reference/mcmc_checks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_checks — mcmc_checks","text":"function, called MCMC(), performs number checks data used fitting ensure proper functionality. verifies number parameters varied consistent settings certain values outwith sensible boundaries (e.g. probabilities must 0 1).","code":""},{"path":"/reference/mcmc_checks2.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_checks2 — mcmc_checks2","title":"mcmc_checks2 — mcmc_checks2","text":"Perform checks MCMC inputs","code":""},{"path":"/reference/mcmc_checks2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_checks2 — mcmc_checks2","text":"","code":"mcmc_checks2(   pars_ini = c(),   n_regions = 1,   type = NULL,   pars_min = c(),   pars_max = c(),   prior_type = NULL,   enviro_data = NULL,   R0_fixed_values = NULL,   vaccine_efficacy = NULL,   p_rep_severe = NULL,   p_rep_death = NULL )"},{"path":"/reference/mcmc_checks2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_checks2 — mcmc_checks2","text":"pars_ini = Initial parameter values n_regions = Number regions type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" pars_min Lower limits parameter values specified pars_max Upper limits parameter values specified prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values enviro_data Values environmental covariates (use) R0_fixed_values Values R0 use fitted (set NULL R0 fitted) vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter)","code":""},{"path":"/reference/mcmc_checks2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_checks2 — mcmc_checks2","text":"function, called MCMC2(), performs number checks data used fitting ensure proper functionality. verifies number parameters fitted consistent settings, certain values outwith sensible boundaries (e.g. probabilities must 0 1) [TBA]","code":""},{"path":"/reference/mcmc_FOI_R0_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"Set FOI R0 values calculate prior probability values MCMC calculation","code":""},{"path":"/reference/mcmc_FOI_R0_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"","code":"mcmc_FOI_R0_setup(   type = \"\",   prior_type = \"\",   regions = \"\",   log_params_prop = c(),   enviro_data = list(),   R0_fixed_values = c(),   log_params_min = c(),   log_params_max = c() )"},{"path":"/reference/mcmc_FOI_R0_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values regions Vector region names log_params_prop Proposed values varied parameters (natural logarithm actual parameters) enviro_data Environmental data frame, containing relevant environmental variables R0_fixed_values Values R0 use varied log_params_min Lower limits varied parameter values specified log_params_max Upper limits varied parameter values specified '","code":""},{"path":"/reference/mcmc_FOI_R0_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"Takes parameter values used Markov Chain Monte Carlo fitting, calculates spillover force infection (optionally) reproduction number values either directly environmental covariates. Also calculates related components prior probability.","code":""},{"path":"/reference/mcmc_prelim_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_prelim_fit — mcmc_prelim_fit","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"Test multiple sets parameters randomly drawn range maximum minimum values order find approximate values giving maximum likelihood","code":""},{"path":"/reference/mcmc_prelim_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"","code":"mcmc_prelim_fit(   n_iterations = 1,   n_param_sets = 1,   n_bounds = 1,   type = NULL,   log_params_min = NULL,   log_params_max = NULL,   input_data = list(),   obs_sero_data = list(),   obs_case_data = list(),   obs_outbreak_data = list(),   n_reps = 1,   mode_start = 0,   prior_type = \"zero\",   dt = 1,   enviro_data = NULL,   R0_fixed_values = c(),   vaccine_efficacy = NULL,   p_rep_severe = NULL,   p_rep_death = NULL,   m_FOI_Brazil = 1 )"},{"path":"/reference/mcmc_prelim_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"n_iterations = Number times run adjust maximum/minimum n_param_sets = Number parameter sets run iteration n_bounds = Number parameter sets (highest likelihood values) take iteration create new maximum/minimum values type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" log_params_min Initial lower limits varied parameter values (natural logarithm actual limits) log_params_max Initial upper limits varied parameter values (natural logarithm actual limits) input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) n_reps Number times repeat calculations get average likelihood step mode_start Flag indicating set initial population immunity level addition vaccination mode_start = 0, vaccinated individuals mode_start = 1, shift non-vaccinated individuals recovered give herd immunity prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values dt time increment days (must 1 5) enviro_data Values environmental variables (use) R0_fixed_values Values R0 use varied vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) m_FOI_Brazil Multiplier FOI Brazil regions '","code":""},{"path":"/reference/mcmc_prelim_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"function used estimate model parameter values giving maximum likelihood; primarily intended used generate initial parameter values Markov Chain Monte Carlo fitting (using mcmc() function).","code":""},{"path":"/reference/mcmc_prelim_fit2.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_prelim_fit2 — mcmc_prelim_fit2","title":"mcmc_prelim_fit2 — mcmc_prelim_fit2","text":"Test multiple sets parameters randomly drawn range maximum minimum values order find approximate values giving maximum likelihood","code":""},{"path":"/reference/mcmc_prelim_fit2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_prelim_fit2 — mcmc_prelim_fit2","text":"","code":"mcmc_prelim_fit2(   n_iterations = 1,   n_param_sets = 1,   n_bounds = 1,   type = NULL,   pars_min = NULL,   pars_max = NULL,   input_data = list(),   obs_sero_data = list(),   obs_case_data = list(),   obs_outbreak_data = list(),   n_reps = 1,   mode_start = 0,   prior_type = \"zero\",   dt = 1,   enviro_data = NULL,   R0_fixed_values = c(),   vaccine_efficacy = NULL,   p_rep_severe = NULL,   p_rep_death = NULL )"},{"path":"/reference/mcmc_prelim_fit2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_prelim_fit2 — mcmc_prelim_fit2","text":"n_iterations = Number times run adjust maximum/minimum n_param_sets = Number parameter sets run iteration n_bounds = Number parameter sets (highest likelihood values) take iteration create new maximum/minimum values type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" pars_min Initial lower limits parameter values pars_max Initial upper limits parameter values input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) n_reps Number times repeat calculations get average likelihood step mode_start Flag indicating set initial population immunity level addition vaccination mode_start = 0, vaccinated individuals mode_start = 1, shift non-vaccinated individuals recovered give herd immunity prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values dt time increment days (must 1 5) enviro_data Values environmental variables (use) R0_fixed_values Values R0 use fitted vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) '","code":""},{"path":"/reference/mcmc_prelim_fit2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_prelim_fit2 — mcmc_prelim_fit2","text":"function used estimate model parameter values giving maximum likelihood; primarily intended used generate initial parameter values Markov Chain Monte Carlo fitting (using mcmc() function). [TBC]","code":""},{"path":"/reference/MCMC_step.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC_step — MCMC_step","title":"MCMC_step — MCMC_step","text":"Single MCMC step - one regions","code":""},{"path":"/reference/MCMC_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC_step — MCMC_step","text":"","code":"MCMC_step(   log_params = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   chain_cov = 1,   adapt = 0,   like_current = -Inf,   const_list = list() )"},{"path":"/reference/MCMC_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC_step — MCMC_step","text":"log_params Varied parameters (log values actual parameters) input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) chain_cov = Chain covariance adapt = 0/1 flag indicating type calculation use proposition value like_current = Current accepted likelihood value const_list = List constant parameters/flags/etc. loaded mcmc() (type,log_params_min,log_params_max, n_reps,mode_start,prior_type,dt=dt,enviro_data,R0_fixed_values,vaccine_efficacy,p_rep_severe,p_rep_death, m_FOI_Brazil)","code":""},{"path":"/reference/MCMC_step.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC_step — MCMC_step","text":"function runs single step Markov chain set using function mcmc(). proposes set parameters using param_prop_setup() function, calculates likelihood observing observed data based proposed parameter set, accepts rejects proposed parameter set based calculated likelihood existing chain information, returns next line information chain mcmc().","code":""},{"path":"/reference/MCMC_step2.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC_step2 — MCMC_step2","title":"MCMC_step2 — MCMC_step2","text":"Single MCMC step - one regions","code":""},{"path":"/reference/MCMC_step2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC_step2 — MCMC_step2","text":"","code":"MCMC_step2(   param = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   chain_cov = 1,   adapt = 0,   like_current = -Inf,   const_list = list() )"},{"path":"/reference/MCMC_step2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC_step2 — MCMC_step2","text":"param Log values parameters input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) chain_cov = Chain covariance adapt = 0/1 flag indicating type calculation use proposition value like_current = Current accepted likelihood value const_list = List constant parameters/flags/etc. loaded mcmc2() (type,pars_min,pars_max,n_reps, mode_start,prior_type,dt=dt,enviro_data,R0_fixed_values,vaccine_efficacy,p_rep_severe,p_rep_death)","code":""},{"path":"/reference/MCMC_step2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC_step2 — MCMC_step2","text":"function runs single step Markov chain set using function mcmc(). proposes set parameters using param_prop_setup() function, calculates likelihood observing observed data based proposed parameter set, accepts rejects proposed parameter set based calculated likelihood existing chain information, returns next line information chain mcmc(). [TBC]","code":""},{"path":"/reference/outbreak_risk_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"outbreak_risk_compare — outbreak_risk_compare","title":"outbreak_risk_compare — outbreak_risk_compare","text":"Calculate likelihood observed outbreak data based modelled outbreak risk","code":""},{"path":"/reference/outbreak_risk_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"outbreak_risk_compare — outbreak_risk_compare","text":"","code":"outbreak_risk_compare(model_outbreak_risk = c(), obs_data = c())"},{"path":"/reference/outbreak_risk_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"outbreak_risk_compare — outbreak_risk_compare","text":"model_outbreak_risk Modelled annual outbreak risk (0-1) obs_data Observed annual outbreak Y/N data (0 1) '","code":""},{"path":"/reference/outbreak_risk_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"outbreak_risk_compare — outbreak_risk_compare","text":"Takes modelled outbreak risk data (probabilities one outbreaks reported given years) compared observed data whether 1 outbreaks reported given years, calculating logarithmic likelihood observing latter given former.","code":""},{"path":"/reference/outbreak_risk_generate.html","id":null,"dir":"Reference","previous_headings":"","what":"outbreak_risk_generate — outbreak_risk_generate","title":"outbreak_risk_generate — outbreak_risk_generate","text":"Generate annual outbreak risk data","code":""},{"path":"/reference/outbreak_risk_generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"outbreak_risk_generate — outbreak_risk_generate","text":"","code":"outbreak_risk_generate(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_sets = 1,   n_reps = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1,   p_rep_severe = 1,   p_rep_death = 1 )"},{"path":"/reference/outbreak_risk_generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"outbreak_risk_generate — outbreak_risk_generate","text":"FOI_spillover = Force infection due spillover sylvatic reservoir R0 = Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) n_sets Number datasets run pre-data period output n_reps Number repetitions run per dataset year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) p_rep_severe Probability severe case reported p_rep_death Probability fatal case reported '","code":""},{"path":"/reference/outbreak_risk_generate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"outbreak_risk_generate — outbreak_risk_generate","text":"Accepts epidemiological, population case reporting parameters model settings; generates annual outbreak risk specified time period one region. Runs basic SEIRV model (Basic_Model_Run function) specified region time period specified number output datasets (n_sets), runs case data generation  function (case_data_generate) larger number repetitions (n_reps) dataset, annual outbreak risk given (number repetitions one cases reported)/n_reps.","code":""},{"path":"/reference/parameter_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter setup — parameter_setup","title":"Parameter setup — parameter_setup","text":"Set parameters input model","code":""},{"path":"/reference/parameter_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter setup — parameter_setup","text":"","code":"parameter_setup(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1 )"},{"path":"/reference/parameter_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter setup — parameter_setup","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRVC input list previous run(s) year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"/reference/parameter_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter setup — parameter_setup","text":"Takes multiple inputs, outputs list use odin.dust SEIRV model versions.","code":""},{"path":"/reference/parameter_setup2.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter setup 2 — parameter_setup2","title":"Parameter setup 2 — parameter_setup2","text":"Set parameters input model","code":""},{"path":"/reference/parameter_setup2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter setup 2 — parameter_setup2","text":"","code":"parameter_setup2(   FOI_spillover = 0,   R0 = 1,   vacc_data1 = list(),   vacc_data2 = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1,   p_rep = c(1e-06, 1e-06),   outbreak_threshold1 = 1,   cluster_threshold1 = 1 )"},{"path":"/reference/parameter_setup2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter setup 2 — parameter_setup2","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data1 Vaccination coverage age group year (non-emergency) vacc_data2 Vaccination coverage age group year (emergency) pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRVC input list previous run(s) year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) p_rep Probabilities infection reported case different conditions (TBA) outbreak_threshold1 Threshold total . reported cases trigger outbreak flag 1 cluster_threshold1 Threshold current infectious fraction trigger cluster flag 1 '","code":""},{"path":"/reference/parameter_setup2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter setup 2 — parameter_setup2","text":"Takes multiple inputs, outputs list use odin.dust SEIRV model versions.","code":""},{"path":"/reference/param_calc_enviro.html","id":null,"dir":"Reference","previous_headings":"","what":"param_calc_enviro — param_calc_enviro","title":"param_calc_enviro — param_calc_enviro","text":"Parameter calculation environmental covariates","code":""},{"path":"/reference/param_calc_enviro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"param_calc_enviro — param_calc_enviro","text":"","code":"param_calc_enviro(enviro_coeffs = c(), enviro_covar_values = c())"},{"path":"/reference/param_calc_enviro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"param_calc_enviro — param_calc_enviro","text":"enviro_coeffs Values environmental coefficients enviro_covar_values Values environmental covariates '","code":""},{"path":"/reference/param_calc_enviro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"param_calc_enviro — param_calc_enviro","text":"Takes set coefficients environmental covariates covariate values calculates values   spillover force infection reproduction number.","code":""},{"path":"/reference/param_prop_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"param_prop_setup — param_prop_setup","title":"param_prop_setup — param_prop_setup","text":"Set proposed new log parameter values next step chain","code":""},{"path":"/reference/param_prop_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"param_prop_setup — param_prop_setup","text":"","code":"param_prop_setup(log_params = c(), chain_cov = 1, adapt = 0)"},{"path":"/reference/param_prop_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"param_prop_setup — param_prop_setup","text":"log_params Previous log parameter values used input chain_cov Covariance calculated previous steps chain adapt 0/1 flag indicating type calculation use proposition value '","code":""},{"path":"/reference/param_prop_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"param_prop_setup — param_prop_setup","text":"Takes current values parameter set used Markov Chain Monte Carlo fitting proposes new values multivariate normal distribution existing values form mean standard deviation based chain covariance (flag \"adapt\" set 1) flat value based number parameters.","code":""},{"path":"/reference/plot_mcmc_enviro_coeff_data.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_mcmc_enviro_coeff_data — plot_mcmc_enviro_coeff_data","title":"plot_mcmc_enviro_coeff_data — plot_mcmc_enviro_coeff_data","text":"Plot environmental coefficients MCMC results","code":""},{"path":"/reference/plot_mcmc_enviro_coeff_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_mcmc_enviro_coeff_data — plot_mcmc_enviro_coeff_data","text":"","code":"plot_mcmc_enviro_coeff_data(   data_frame = list(),   env_vars = c(),   plot_type = \"box\",   text_size1 = 10 )"},{"path":"/reference/plot_mcmc_enviro_coeff_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_mcmc_enviro_coeff_data — plot_mcmc_enviro_coeff_data","text":"data_frame Data frame coefficient values obtained using get_mcmc_enviro_coeff_data() env_vars List environmental covariates plot_type Type plots create (choose \"box\",\"violin\") text_size1 Text size parameter axis labels '","code":""},{"path":"/reference/plot_mcmc_enviro_coeff_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_mcmc_enviro_coeff_data — plot_mcmc_enviro_coeff_data","text":"function takes data frame values (obtained using get_mcmc_enviro_coeff_data() function)   coefficients environmental covariates plots graphs","code":""},{"path":"/reference/plot_mcmc_FOI_R0_data.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_mcmc_FOI_R0_data — plot_mcmc_FOI_R0_data","title":"plot_mcmc_FOI_R0_data — plot_mcmc_FOI_R0_data","text":"Plot spillover force infection (FOI) reproduction number (R0) values MCMC output data","code":""},{"path":"/reference/plot_mcmc_FOI_R0_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_mcmc_FOI_R0_data — plot_mcmc_FOI_R0_data","text":"","code":"plot_mcmc_FOI_R0_data(   data_frame = list(),   regions = c(),   plot_type = \"box\",   text_size1 = 10 )"},{"path":"/reference/plot_mcmc_FOI_R0_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_mcmc_FOI_R0_data — plot_mcmc_FOI_R0_data","text":"data_frame Data frame FOI/R0 values obtained using get_mcmc_FOI_R0_data() regions List region names plot_type Type plots create (choose \"box\",\"violin\",\"error_bars\",\"scatter\") text_size1 Text size parameter axis labels '","code":""},{"path":"/reference/plot_mcmc_FOI_R0_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_mcmc_FOI_R0_data — plot_mcmc_FOI_R0_data","text":"function takes data frame spillover force infection (FOI) reproduction number (R0) values calculated MCMC output data using get_mcmc_FOI_R0_data() function plots values one number different ways display spread values obtained (box plots, violin plots, simple plots error bars, scatter plots FOI vs R0).","code":""},{"path":"/reference/plot_mcmc_prob_data.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_mcmc_prob_data — plot_mcmc_prob_data","title":"plot_mcmc_prob_data — plot_mcmc_prob_data","text":"Plot values vaccine efficacy /reporting probabilities MCMC output data","code":""},{"path":"/reference/plot_mcmc_prob_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_mcmc_prob_data — plot_mcmc_prob_data","text":"","code":"plot_mcmc_prob_data(   input_frame = list(),   plot_type = \"box\",   values = c(\"vaccine_efficacy\"),   text_size1 = 10 )"},{"path":"/reference/plot_mcmc_prob_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_mcmc_prob_data — plot_mcmc_prob_data","text":"input_frame Data frame MCMC output data plot_type Type plots create (choose \"box\",\"violin\",\"error_bars\") values List names parameters plot (must parameters appearing data) text_size1 Text size parameter axis labels","code":""},{"path":"/reference/plot_mcmc_prob_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_mcmc_prob_data — plot_mcmc_prob_data","text":"function takes data frame produced functions get_mcmc_data() /truncate_mcmc_data(), calculates values additional parameters fitted using function besides spillover force infection (FOI) reproduction number (R0) plots values one number different ways display spread values obtained (box plots, violin plots, simple plots error bars).","code":""},{"path":"/reference/plot_model_output.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_model_output — plot_model_output","title":"plot_model_output — plot_model_output","text":"Plot output Full_Model_Run() Basic_Model_Run() functions","code":""},{"path":"/reference/plot_model_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_model_output — plot_model_output","text":"","code":"plot_model_output(model_output = list())"},{"path":"/reference/plot_model_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_model_output — plot_model_output","text":"model_output List output data produced via Full_Model_Run() Basic_Model_Run() functions '","code":""},{"path":"/reference/plot_model_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_model_output — plot_model_output","text":"Takes output Full_Model_Run() Basic_Model_Run() functions outputs ggplot graph   S, R V summed age groups, error bars showing spread values multiple repetitions","code":""},{"path":"/reference/Reactive_Model_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Reactive_Model_Run — Reactive_Model_Run","title":"Reactive_Model_Run — Reactive_Model_Run","text":"Run reactive version SEIRV model","code":""},{"path":"/reference/Reactive_Model_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reactive_Model_Run — Reactive_Model_Run","text":"","code":"Reactive_Model_Run(   FOI_spillover = 0,   R0 = 1,   vacc_data1 = list(),   vacc_data2 = list(),   pop_data = list(),   year0 = 1940,   mode_start = 0,   n_particles = 1,   n_threads = 1,   year_end = 2000,   year_data_begin = 1999,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1,   p_rep = c(1e-06, 1e-06),   outbreak_threshold1 = 1,   cluster_threshold1 = 1 )"},{"path":"/reference/Reactive_Model_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reactive_Model_Run — Reactive_Model_Run","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data1 Vaccination coverage age group year (non-emergency) vacc_data2 Vaccination coverage age group year (emergency) pop_data Population age group year year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRVC input list previous run(s) n_particles number particles use n_threads number threads use year_end year run year_data_begin year begin saving data vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) p_rep Probabilities infection reported case different conditions (TBA) outbreak_threshold1 Threshold total . reported cases trigger outbreak flag 1 cluster_threshold1 Threshold current infectious fraction trigger cluster flag 1","code":""},{"path":"/reference/Reactive_Model_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reactive_Model_Run — Reactive_Model_Run","text":"Accepts epidemiological + population parameters model settings; runs full version SEIRV model one region specified time period number particles/threads outputs time-dependent SEIRV values, infection numbers total force infection values. Alternate version incorporating case reporting reactive surveillance/control measures based case numbers","code":""},{"path":"/reference/sero_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_calculate — sero_calculate","title":"sero_calculate — sero_calculate","text":"Calculate seroprevalence unvaccinated people modelled data one years one age range","code":""},{"path":"/reference/sero_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_calculate — sero_calculate","text":"","code":"sero_calculate(   age_min = 0,   age_max = 101,   years = NULL,   vc_factor = 0,   data = list(),   n_p = 1 )"},{"path":"/reference/sero_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_calculate — sero_calculate","text":"age_min = Minimum age age group age_max = Maximum age age group years = Years calculate average annual seroprevalence vc_factor = Proportion patients tested vaccine status unknown data = Output Basic_Model_Run Full_Model_Run n_p = Particle select data '","code":""},{"path":"/reference/sero_calculate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_calculate — sero_calculate","text":"Takes information minimum maximum ages desired range, year(s) calculate seroprevalence, factor representing proportion patients unknown vaccine status, SEIRV model output data, calculates seroprevalence unvaccinated people specified age range specified year(s).","code":""},{"path":"/reference/sero_calculate2.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_calculate2 — sero_calculate2","title":"sero_calculate2 — sero_calculate2","text":"Calculate number \"samples\" number \"positives\" modelled data specified age range(s) year(s)","code":""},{"path":"/reference/sero_calculate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_calculate2 — sero_calculate2","text":"","code":"sero_calculate2(sero_data = list(), model_data = list(), n_p = 1)"},{"path":"/reference/sero_calculate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_calculate2 — sero_calculate2","text":"sero_data = Data frame containing years, minimum maximum ages, values vc_factor (proportion people vaccination status unknown) model_data = Output Basic_Model_Run Full_Model_Run n_p = Particle select model_data '","code":""},{"path":"/reference/sero_calculate2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_calculate2 — sero_calculate2","text":"Takes information minimum maximum ages desired range(s), year(s) calculate number \"samples\" (people eligible testing) \"positives\" (people test positive), plus vc_factor (proportion people vaccination status unknown)","code":""},{"path":"/reference/sero_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_compare — sero_compare","title":"sero_compare — sero_compare","text":"Take model results, calculate seroprevalence comparison observed seroprevalence calculate likelihood (single region, multiple years/age ranges)","code":""},{"path":"/reference/sero_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_compare — sero_compare","text":"","code":"sero_compare(model_data = list(), obs_sero_data = list(), n_particle = 1)"},{"path":"/reference/sero_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_compare — sero_compare","text":"model_data = Output Basic_Model_Run_OD Full_Model_Run_OD obs_sero_data = Seroprevalence data comparison, year age group, format . samples/. positives n_particle = Particle select model_data '","code":""},{"path":"/reference/sero_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_compare — sero_compare","text":"Takes SEIRV model output data observed seroprevalence data, calculates seroprevalence modelled data, compares modelled observed data, calculating logarithmic likelihood observing latter given former, using binomial formula.","code":""},{"path":"/reference/sero_compare_multiparticle.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_compare_multiparticle — sero_compare_multiparticle","title":"sero_compare_multiparticle — sero_compare_multiparticle","text":"Take model results multi-particle run using OD version model, calculate seroprevalence comparison observed seroprevalence   calculate likelihood value (single region, multiple years/age ranges) particle; return vector values","code":""},{"path":"/reference/sero_compare_multiparticle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_compare_multiparticle — sero_compare_multiparticle","text":"","code":"sero_compare_multiparticle(model_data = list(), obs_sero_data = list())"},{"path":"/reference/sero_compare_multiparticle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_compare_multiparticle — sero_compare_multiparticle","text":"model_data = Output Basic_Model_Run Full_Model_Run obs_sero_data = Seroprevalence data comparison, year age group, format . samples/.   positives '","code":""},{"path":"/reference/sero_compare_multiparticle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_compare_multiparticle — sero_compare_multiparticle","text":"Calculates logarithmic likelihood observing observed seroprevalence given modelled data, similar sero_compare(), using modelled data multiple particles.","code":""},{"path":"/reference/sero_match_graphs.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_match_graphs — sero_match_graphs","title":"sero_match_graphs — sero_match_graphs","text":"Function create series graphs comparing modelled observed serological data results   generated data_match_multi() function","code":""},{"path":"/reference/sero_match_graphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_match_graphs — sero_match_graphs","text":"","code":"sero_match_graphs(   model_data = list(),   obs_sero_data = list(),   plot_type = \"mean\",   text_size = 1,   hide_observed = FALSE )"},{"path":"/reference/sero_match_graphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_match_graphs — sero_match_graphs","text":"model_data Simulated datasets produced data_match_multi() function obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives plot_type Form plot model data: \"\": bands showing 95% 50% values; \"mean\": bands showing 95% 50% confidence intervals mean values text_size Size text display graphs hide_observed TRUE, indicates supplied observed data \"dummy\" data supplied indicate years age ranges, plotted graph(s)","code":""},{"path":"/reference/sero_match_graphs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_match_graphs — sero_match_graphs","text":"Takes simulated datasets produced data_match_multi() function along observed seroprevalence   dataset used generate simulated datasets, produces graph(s) (one graph per survey) showing observed   simulated data set(s) axes, observed data displayed points lines simulated data   coloured bands.","code":""},{"path":"/reference/single_like_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"single_like_calc — single_like_calc","title":"single_like_calc — single_like_calc","text":"Function calculates outputs likelihood observing simulated data","code":""},{"path":"/reference/single_like_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"single_like_calc — single_like_calc","text":"","code":"single_like_calc(   log_params_prop = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   const_list = list() )"},{"path":"/reference/single_like_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"single_like_calc — single_like_calc","text":"log_params_prop Proposed values varied parameters (natural logarithm actual parameters) input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file), cross-reference tables added using input_data_process2 MCMC2 obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) const_list = List constant parameters/flags/etc. loaded mcmc() (type,log_params_min,log_params_max, n_reps, mode_start,prior_type,dt=dt,enviro_data,R0_fixed_values,vaccine_efficacy,p_rep_severe,p_rep_death, m_FOI_Brazil)","code":""},{"path":"/reference/single_like_calc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"single_like_calc — single_like_calc","text":"function calculates total likelihood observing set observations (across multiple regions data types) given proposed parameter set.","code":""},{"path":"/reference/single_like_calc2.html","id":null,"dir":"Reference","previous_headings":"","what":"single_like_calc2 — single_like_calc2","title":"single_like_calc2 — single_like_calc2","text":"Function calculates outputs likelihood","code":""},{"path":"/reference/single_like_calc2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"single_like_calc2 — single_like_calc2","text":"","code":"single_like_calc2(   param_prop = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   obs_outbreak_data = NULL,   const_list = list() )"},{"path":"/reference/single_like_calc2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"single_like_calc2 — single_like_calc2","text":"param_prop Log values proposed parameters input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file), cross-reference tables added using input_data_process2 MCMC2 obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths obs_outbreak_data Outbreak Y/N data comparison, region year, format 0 = outbreaks, 1 = 1 outbreak(s) const_list = List constant parameters/flags/etc. loaded mcmc2() (type,pars_min,pars_max,n_reps, mode_start,prior_type,dt=dt,enviro_data,R0_fixed_values,vaccine_efficacy,p_rep_severe,p_rep_death)","code":""},{"path":"/reference/single_like_calc2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"single_like_calc2 — single_like_calc2","text":"function calculates total likelihood observing set observations (across multiple regions data types) given proposed parameter set. [TBC]","code":""},{"path":"/reference/total_burden_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"total_burden_estimate — total_burden_estimate","title":"total_burden_estimate — total_burden_estimate","text":"Function calculate annual yellow fever burden across multiple regions based derived parameters","code":""},{"path":"/reference/total_burden_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"total_burden_estimate — total_burden_estimate","text":"","code":"total_burden_estimate(   type = \"FOI+R0 enviro\",   param_dist = list(),   input_data = list(),   start_SEIRV0 = NULL,   years_data = c(),   n_reps = 1,   mode_start = 1,   flag_reporting = FALSE,   dt = 5,   enviro_data = NULL,   R0_fixed_values = NULL,   vaccine_efficacy0 = NULL,   p_rep_severe0 = NULL,   p_rep_death0 = NULL,   m_FOI_Brazil0 = 1 )"},{"path":"/reference/total_burden_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"total_burden_estimate — total_burden_estimate","text":"type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" param_dist Data frame values input parameters, one set per row input_data List population vaccination data multiple regions start_SEIRV0 SEIRV data use input years_data Vector years output data n_reps Number repeats average results mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) flag_reporting Flag indicating whether output number reported severe fatal cases dt Time increment days use model (either 1.0 5.0 days) enviro_data enviro_data Data frame containing values environmental covariates; set NULL use R0_fixed_values Values R0 use taken parameter distribution vaccine_efficacy0 Vaccine efficacy (set NULL varied parameter) p_rep_severe0 Probability observation severe infection (set NULL varied parameter) p_rep_death0 Probability observation death (set NULL varied parameter) m_FOI_Brazil0 Multiplier spillover FOI Brazil regions (set NULL varied parameter)","code":""},{"path":"/reference/total_burden_estimate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"total_burden_estimate — total_burden_estimate","text":"Function take parameter sets derived MCMC fitting use calculate annual total reported case death numbers multiple regions compare external data","code":""},{"path":"/reference/truncate_mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"truncate_mcmc_data — truncate_mcmc_data","title":"truncate_mcmc_data — truncate_mcmc_data","text":"Take MCMC results generated get_mcmc_data extract selected lines; optionally plot likelihood graph /output data set","code":""},{"path":"/reference/truncate_mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncate_mcmc_data — truncate_mcmc_data","text":"","code":"truncate_mcmc_data(input_frame = list(), rows = c(1), plot_graph = TRUE)"},{"path":"/reference/truncate_mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncate_mcmc_data — truncate_mcmc_data","text":"input_frame Data frame output data rows Vector line numbers extract input_frame plot_graph TRUE/FALSE flag indicating whether plot results graph '","code":""},{"path":"/reference/truncate_mcmc_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"truncate_mcmc_data — truncate_mcmc_data","text":"function takes data frame output get_mcmc_data() function outputs data frame consisting selected lines; can used cut pre-burnin points Markov chain /obtain selection points along part chain. graph posterior likelihood values truncated data frame can optionally plotted.","code":""},{"path":"/reference/YellowFeverDynamics.html","id":null,"dir":"Reference","previous_headings":"","what":"Yellow Fever Outbreak Dynamic Model — YellowFeverDynamics","title":"Yellow Fever Outbreak Dynamic Model — YellowFeverDynamics","text":"package running dynamic, stochastic SEIRV model yellow fever, creating input data processing output data. package can also used fit values epidemiological parameters model different types data yellow fever burden one regions.","code":""}]
